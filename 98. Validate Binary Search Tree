/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool isValidBST(TreeNode* root) {
        if(!root)
            return true;
        
        dfs(root);
        
        for(int i = 1; i < v.size(); i++)   //Here if i write v[i] >= v[i + 1] then there will be buffer overflow                                              in the last iteration
        {
            if(v[i] <= v[i-1])
                return false;
        }
        return true;
        
    }
    
    void dfs(TreeNode* root)
    {
        if(!root)
            return;
        
        dfs(root->left);
        v.push_back(root->val);
        dfs(root->right);
    }
    
 vector<int> v;
};
